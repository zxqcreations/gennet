import tensorflow as tf
from gennet import gennet
import numpy as np

a = gennet('zxq100', 224, 224, 3)

a.add_layer([3, 3, 3, 64], [64], 'vgg_16/conv1/conv1_1')
a.add_layer([3, 3, 64, 64], [64], 'vgg_16/conv1/conv1_2')
a.maxpooling()
print(a.net_shape)
a.add_layer([3, 3, 64, 128], [128], 'vgg_16/conv2/conv2_1')
a.add_layer([3, 3, 128, 128], [128], 'vgg_16/conv2/conv2_2')
a.maxpooling()
print(a.net_shape)
a.add_layer([3, 3, 128, 256], [256], 'vgg_16/conv3/conv3_1')
a.add_layer([3, 3, 256, 256], [256], 'vgg_16/conv3/conv3_2')
a.add_layer([3, 3, 256, 256], [256], 'vgg_16/conv3/conv3_3')
a.maxpooling()
print(a.net_shape)
a.add_layer([3, 3, 256, 512], [512], 'vgg_16/conv4/conv4_1')
a.add_layer([3, 3, 512, 512], [512], 'vgg_16/conv4/conv4_2')
a.add_layer([3, 3, 512, 512], [512], 'vgg_16/conv4/conv4_3')
a.maxpooling()
print(a.net_shape)
a.add_layer([3, 3, 512, 512], [512], 'vgg_16/conv5/conv5_1')
a.add_layer([3, 3, 512, 512], [512], 'vgg_16/conv5/conv5_2')
a.add_layer([3, 3, 512, 512], [512], 'vgg_16/conv5/conv5_3')
a.maxpooling()
print(a.net_shape)
a.flatten()
print(a.net_shape)
a.fc(4096, 'vgg_16/fc6')
print(a.net_shape)
a.fc(4096, 'vgg_16/fc7')
a.fc(1000, 'vgg_16/fc8')
print(a.net_shape)
a.softmax()
a.generate('/home/test/code/testcode/output/vgg16.ckpt')
